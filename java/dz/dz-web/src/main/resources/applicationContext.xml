<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/test?characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull" />
        <property name="username" value="root" ></property>
        <property name="password" value="" />

        <property name="filters"><value>stat,log4j,wall</value></property>

        <!-- #最小连接池数量 -->
        <property name="minIdle"><value>1</value></property>
        <!-- #最大连接池数量,default=8 -->
        <property name="maxActive"><value>20</value></property>
        <!-- #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时,default=0 -->
        <property name="initialSize"><value>3</value></property>
        <!-- #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁 -->
        <property name="maxWait"><value>60000</value></property>

        <!-- zhongyao (秒)  通过datasource.getConnontion() 取得的连接必须在removeAbandonedTimeout这么多秒内调用close(),要不我就弄死你.(就是conn不能超过指定的租期) -->
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="600" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned"  value="true"/>

        <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
        <property name="minEvictableIdleTimeMillis"><value>300000</value></property>

        <!-- 物理连接初始化的时候执行的sql -->
        <property name="connectionInitSqls"><value>SELECT 'x'</value></property>
        <!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 -->
        <property name="validationQuery"><value>SELECT 'x'</value></property>
        <!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于，执行validationQuery检测连接是否有效。 -->
        <property name="testWhileIdle"><value>true</value></property>
        <!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 -->
        <property name="testOnBorrow"><value>false</value></property>
        <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnReturn"><value>true</value></property>

        <!-- #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭,default=false -->
        <property name="poolPreparedStatements"><value>false</value></property>
        <!-- #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100 -->
        <property name="maxOpenPreparedStatements"><value>-1</value></property>

    </bean>

    <!-- 事务管理器 -->
    <bean id="springTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置事务特性 -->
    <tx:advice id="txAdvice" transaction-manager="springTxManager">
        <tx:attributes>
            <tx:method name="add*"      propagation="REQUIRED"/>
            <tx:method name="del*"      propagation="REQUIRED"/>
            <tx:method name="update*"   propagation="REQUIRED"/>
            <tx:method name="new*"      propagation="REQUIRED"/>
            <tx:method name="pay*"      propagation="REQUIRED"/>
            <tx:method name="generate*" propagation="REQUIRED"/>
            <tx:method name="cancel*"   propagation="REQUIRED" />
            <tx:method name="set*"   propagation="REQUIRED" />
            <tx:method name="move*"   propagation="REQUIRED" />
            <tx:method name="get*"      read-only="true"/>
            <tx:method name="query*"    read-only="true"/>
            <tx:method name="search*"   read-only="true"/>
            <tx:method name="*"   propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <!-- 配置哪些类的方法需要进行事务管理-->
    <aop:config>
        <aop:pointcut id="allManagerMethod" expression="execution(* com.longdai.service..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>
    </aop:config>




</beans>